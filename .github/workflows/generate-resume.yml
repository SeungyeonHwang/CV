name: Generate Resume

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [published]

jobs:
  generate-resume:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc texlive-xetex texlive-fonts-recommended texlive-lang-japanese fonts-noto-cjk
        
    - name: Generate combined markdown
      run: |
        # output ディレクトリ作成
        mkdir -p output
        
        # 最初の行を保持して生成日を追加（ローカルスクリプトと同じ）
        head -1 README.md > output/resume-complete.md
        echo "" >> output/resume-complete.md
        echo "_**生成日**: $(date '+%Y年%m月%d日')_" >> output/resume-complete.md
        echo "" >> output/resume-complete.md
        tail -n +2 README.md | sed '/\*\*詳細情報\*\*:/d' >> output/resume-complete.md
        echo "" >> output/resume-complete.md
        
        # 各詳細ファイルの内容を追加（ローカルスクリプトと同じ方式）
        docs_files=(
          "docs/S社_AI連携企業材料データベース検索システム.md"
          "docs/C社_AI音声プラットフォーム開発.md"
          "docs/I社_統合ログ管理システム.md"
          "docs/U社_BtoB営業支援SaaS.md"
          "docs/H社_オフィス家具受発注システム.md"
        )
        
        for file in "${docs_files[@]}"; do
          if [ -f "$file" ]; then
            echo "---" >> output/resume-complete.md
            echo "" >> output/resume-complete.md
            company=$(basename "$file" | cut -d'_' -f1)
            echo "# $company 詳細情報" >> output/resume-complete.md
            echo "" >> output/resume-complete.md
            cat "$file" >> output/resume-complete.md
            echo "" >> output/resume-complete.md
          fi
        done
    
    - name: Create HTML template
      run: |
        cat > template.html << 'EOF'
        <!DOCTYPE html>
        <html lang="$lang$">
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes">
          <title>$title$</title>
          <style>
            body {
              font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Hiragino Sans", "Hiragino Kaku Gothic ProN", "メイリオ", sans-serif;
              line-height: 1.8;
              color: #333;
              max-width: 900px;
              margin: 0 auto;
              padding: 2rem;
              background: #fff;
            }
            div[data-align="center"] {
              text-align: center;
            }
            ul li {
              margin-bottom: 0.5em;
            }
            /* 特定セクションの中央揃え */
            h2#黄-丞涓ファン-スンヨン,
            h2#黄-丞涓ファン-スンヨン + p,
            h2#黄-丞涓ファン-スンヨン + p + p,
            h3#お問い合わせ,
            h3#お問い合わせ + p,
            h3#お問い合わせ + p + p {
              text-align: center;
            }
            h1, h2, h3, h4 {
              color: #2c3e50;
              margin-top: 1.5em;
            }
            h1 {
              border-bottom: 3px solid #3498db;
              padding-bottom: 0.5em;
            }
            h2 {
              border-left: 4px solid #3498db;
              padding-left: 0.5em;
            }
            table {
              border-collapse: collapse;
              width: 100%;
              margin: 1em 0;
            }
            th, td {
              border: 1px solid #ddd;
              padding: 8px;
              text-align: left;
            }
            th {
              background-color: #f8f9fa;
            }
            code {
              background: #f4f4f4;
              padding: 2px 4px;
              border-radius: 3px;
            }
            pre {
              background: #f4f4f4;
              padding: 1em;
              border-radius: 5px;
              overflow-x: auto;
            }
            blockquote {
              border-left: 4px solid #3498db;
              padding-left: 1em;
              margin-left: 0;
              color: #666;
            }
            @media print {
              body {
                font-size: 12pt;
              }
              h1 {
                page-break-after: avoid;
              }
              h2, h3, h4 {
                page-break-after: avoid;
              }
              table {
                page-break-inside: avoid;
              }
            }
          </style>
        </head>
        <body>
        $if(toc)$
        <nav id="$idprefix$TOC" role="doc-toc">
        <h2>目次</h2>
        $table-of-contents$
        </nav>
        $endif$
        $body$
        </body>
        </html>
        EOF
    
    - name: Generate HTML
      run: |
        # HTML生成（日本式ビジネス文書スタイル）
        pandoc output/resume-complete.md -o output/resume-complete.html \
          --standalone \
          --metadata title="職務経歴書 - 黄 丞涓（ファン スンヨン）" \
          --metadata lang=ja \
          --toc \
          --toc-depth=2 \
          --from=markdown+raw_html \
          --template=template.html
    
    - name: Generate PDF
      run: |
        # PDF生成（XeLaTeX使用、日本語フォント対応）
        pandoc output/resume-complete.md -o output/resume-complete.pdf \
          --pdf-engine=xelatex \
          --variable mainfont="Noto Sans CJK JP" \
          --variable papersize=a4 \
          --variable geometry:margin=2cm \
          --toc \
          --toc-depth=2
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: resume-files
        path: |
          output/resume-complete.md
          output/resume-complete.html
          output/resume-complete.pdf
    
    - name: Create Release (if tagged)
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          output/resume-complete.md
          output/resume-complete.html
          output/resume-complete.pdf
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}